name: CI build
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
on:
  #schedule:
    # Every 23rd minute of ever 3rd hour (/3) between 06-22.
    # Equivalent: 23 6,9,12,15,18,21 * * *
   # - cron: "23 06-22/3 * * *"
  push:
    branches: [ main ]
  pull_request:
    branches:
  workflow_dispatch:
    # branches:
    inputs:
      ptype:
        required: true
        type: string
      ltype:
        required: true
        type: string
      division_url_path:
        type: string
        required: true
env:
  PYTHON_VERSION: "3.12"
  PY_COLORS: "1"
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    - name: Cache APT packages
      uses: awalsh128/cache-apt-pkgs-action@v1.4
      with:
        packages: tzdata locales google-chrome-stable
        version: 1.0
    - name: Set Locale
      run: |
        sudo apt-get install tzdata locales -y && sudo locale-gen en_US.UTF-8
        sudo localectl set-locale LANG="en_US.UTF-8"
        export LANG="en_US.UTF-8"
        sudo update-locale
        locale -a
        locale
        locale -c -k LC_NUMERIC
        localectl status
    - name: Cache ChromeDriver
      uses: actions/cache@v3
      id: cache-chromedriver
      with:
        path: ~/.local/share/seleniumbase/drivers
        key: ${{ runner.os }}-chromedriver-${{ hashFiles('**/requirements.txt') }}
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install --upgrade pyautogui
    - name: Check the console scripts interface
      run: |
        seleniumbase
        sbase
    - name: Install chromedriver
      if: steps.cache-chromedriver.outputs.cache-hit != 'true'
      run: |
        seleniumbase install chromedriver
    - name: Make sure pytest is working
      run: |
        echo "def test_1(): pass" > nothing.py
        pytest nothing.py --uc
    - name: Check which Chrome binaries exist
      run: |
        python -c "import os; print(os.path.exists('/usr/bin/google-chrome')); print(os.path.exists('/bin/google-chrome-stable')); print(os.path.exists('/bin/chromium-browser')); print(os.path.exists('/bin/chromium'))"
    - name: Display Chrome binary that's used
      run: |
        python -c "from seleniumbase.core import detect_b_ver; print(detect_b_ver.get_binary_location('google-chrome'))"
        python -c "from seleniumbase import undetected; print(undetected.find_chrome_executable())"
    # - name: Run python s.py --debug
    #   run: |
    #     python s.py --debug
    #   env:
    #     BASE_URL: ${{ secrets.BASE_URL }}
    #     PTYPE: ${{ inputs.ptype }}
    #     LTYPE: ${{ inputs.ltype }}
    #     DIVISION_URL_PATH: ${{ inputs.division_url_path }}

    - name: Test run
      run: |
        python j.py --debug
    # https://github.com/rtCamp/action-slack-notify
    - name: Slack Notification
      if: failure()
      uses: rtcamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
